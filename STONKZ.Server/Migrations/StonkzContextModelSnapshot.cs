// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STONKZ.Server.Data;

#nullable disable

namespace STONKZ.Server.Migrations
{
    [DbContext(typeof(StonkzContext))]
    partial class StonkzContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("STONKZ.Server.Models.Stonk", b =>
                {
                    b.Property<int>("StonkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StonkId"));

                    b.Property<string>("StonkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StonkId");

                    b.ToTable("Stonkz");
                });

            modelBuilder.Entity("STONKZ.Server.Models.StonkData", b =>
                {
                    b.Property<int>("StonkDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StonkDataId"));

                    b.Property<double>("ChangePercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StonkId")
                        .HasColumnType("int");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.HasKey("StonkDataId");

                    b.HasIndex("StonkId");

                    b.ToTable("StonkDataz");
                });

            modelBuilder.Entity("STONKZ.Server.Models.StonkData", b =>
                {
                    b.HasOne("STONKZ.Server.Models.Stonk", null)
                        .WithMany("StonkHistory")
                        .HasForeignKey("StonkId");
                });

            modelBuilder.Entity("STONKZ.Server.Models.Stonk", b =>
                {
                    b.Navigation("StonkHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
